Quiz Questions
1. Which of the following is a correct example of a list comprehension?
a) list = [x for x in range(10)]
b) list = x in range(10)
c) list = for x in range(10): x
d) list = map(range(10))

ans:A

----------------------------------------

2. What does an iterator in Python do?
a) Stores all elements in memory at once
b) Allows iterating through elements one at a time
c) Automatically generates infinite values
d) Executes functions in parallel


ans:B

----------------------------------------

3. Which keyword is used to create a generator in Python?
a) yield
b) return
c) break
d) continue


ans:A

----------------------------------------


4. What is the purpose of a Python decorator?
a) To create loops
b) To modify or extend the behavior of a function
c) To filter elements from a list
d) To handle exceptions


ans:B

----------------------------------------

5. Which of the following is an example of a lambda function in Python?
a) lambda x: x * 2
b) def multiply(x): return x * 2
c) map(x: x * 2)
d) for x in range(5): x * 2


ans:A

----------------------------------------


6. In the following code, what will next(gen) do?

def gen():
    yield 1
    yield 2
gen = gen()

a) Return 1
b) Return 2
c) Raise a StopIteration error
d) Return a list of [1, 2]


ans:A

----------------------------------------


7. Which of the following functions is not suitable for lambda functions?
a) map()
b) filter()
c) reduce()
d) def()

ans:D

----------------------------------------



8. How do you apply a decorator to a Python function?
a) By calling the decorator inside the function
b) By prefixing the function with the @decorator_name
c) By passing the decorator as an argument to the function
d) By using the yield keyword

ans:B

----------------------------------------



9. What will the following code output?

list1 = [1, 2, 3, 4]
squared = [x**2 for x in list1]
print(squared)

a) [1, 4, 9, 16]
b) [1, 2, 3, 4]
c) [1, 8, 27, 64]
d) [1, 4, 9]

ans:A

----------------------------------------




10. What is the result of this code?

from functools import reduce
numbers = [1, 2, 3, 4]
result = reduce(lambda x, y: x + y, numbers)
print(result)

a) 10
b) 24
c) [1, 2, 3, 4]
d) TypeError

ans:A

----------------------------------------

Additional Quiz Questions
1. Which of the following is the correct syntax to create a list of squares using list comprehensions?
a) [x * 2 for x in 1, 2, 3, 4]
b) [x ** 2 for x in range(5)]
c) list(x ** 2 for x in range(5))
d) [x for x in range(5) ** 2]


ans:B

----------------------------------------

2. What is the purpose of the yield keyword in Python generators?
a) To stop a function permanently
b) To return a value and pause execution of the generator
c) To initialize an iterator
d) To define a function


ans:B

----------------------------------------

3. Which of the following methods converts a generator into a list?
a) list()
b) tuple()
c) set()
d) dict()


ans:A

----------------------------------------

4. Which of the following is not a valid use case for a Python decorator?
a) Adding logging to a function
b) Adding authentication to a function
c) Iterating over elements
d) Modifying arguments to a function


ans:C

----------------------------------------


5. What happens when a generator function reaches the end of its code without encountering a yield?
a) Returns None
b) Raises a StopIteration exception
c) Freezes the execution permanently
d) Continues running indefinitely


ans:B

----------------------------------------


6. In Python, what is the equivalent of the following list comprehension?

squares = [x**2 for x in range(5)]

a)

squares = []
for x in range(5):
    squares.append(x**2)

b)

squares = map(lambda x: x**2, range(5))

c) Both a and b
d) None of the above


ans:A

----------------------------------------


7. Which of the following is true about Python’s map() function?
a) It always returns a list
b) It applies a function to each item of an iterable
c) It filters elements based on a condition
d) It reduces a list to a single value



ans:B

----------------------------------------


8. What does the following code do?

def decorator(func):
    def wrapper():
        print("Before the function call")
        func()
        print("After the function call")
    return wrapper

@decorator
def say_hello():
    print("Hello!")
say_hello()

a) Prints only "Hello!"
b) Adds functionality before and after "Hello!" is printed
c) Does nothing and returns the original function
d) Raises an error


ans:B

----------------------------------------



9. Which of the following is not true about Python’s filter() function?
a) It applies a function to each element of an iterable
b) It filters elements based on whether the function returns True or False
c) It requires the function argument to return a boolean value
d) It returns a generator-like object


ans:A

----------------------------------------

10. How is the reduce() function different from map() and filter()?
a) It applies a function to every element in an iterable and returns the modified iterable
b) It combines elements of an iterable into a single value
c) It works only on lists
d) It does not use lambda functions


ans:B

----------------------------------------



Basic Quiz
1. Fixtures
What is the purpose of defining a fixture in conftest.py?
a. To write test cases
b. To make reusable setups available to multiple test files
c. To store test results
d. To import other Python modules

ans:B

----------------------------------------

2. Fixtures
True or False: Fixtures defined in conftest.py need to be imported manually in test files.


ans:False
----------------------------------------


3. Parameterizing Tests
Which pytest decorator is used to run a test with multiple sets of input values?
a. @pytest.fixture
b. @pytest.mark.parametrize
c. @pytest.mark.many_tests
d. @pytest.mark.iterate

ans:B

----------------------------------------

4. Parameterizing Tests
Fill in the blanks:
In the syntax @pytest.mark.parametrize("a, b", [(1, 2), (3, 4)]), the values (1, 2) and (3, 4) represent __.
a. Variable names
b. Input data sets
c. Test cases
d. Error messages

ans:B

----------------------------------------

5. Assert Statements
What happens when an assert statement fails?
a. The program continues running
b. The program stops and raises an AssertionError
c. The program raises a ValueError
d. The program ignores the

ans:B

----------------------------------------

6. Assert Statements
True or False: An assert statement can include an optional error message.
 ans:True

----------------------------------------
7. Testing Exceptions
Which pytest context manager is used to test if a specific exception is raised?
a. pytest.test
b. pytest.raises
c. pytest.exception
d. pytest.error

ans:B

----------------------------------------


8. Testing Exceptions
In the following code, what is the purpose of the match argument?

with pytest.raises(ValueError, match="Invalid input"):
    my_function("bad_input")

a. To raise the exception
b. To check if the exception contains the specific message “Invalid input”
c. To import the function being tested
d. To handle the exception

 ans:B

----------------------------------------

9. General
What is the benefit of parameterized tests?
a. To speed up the execution of tests
b. To test multiple input combinations with one test function
c. To automatically write test cases
d. To handle errors gracefully
 ans:B

----------------------------------------

10. General
True or False: pytest.raises will fail the test if the specified exception is not raised.

ans:True

----------------------------------------









1. What is pytest used for?

a) Designing websites
b) Running and writing tests for Python code
c) Debugging Java programs
d) Compiling Python code

ans:B

----------------------------------------

2. What is the default command to run all tests using pytest?

a) run_tests
b) pytest
c) python test.py
d) run pytest
 ans:B

----------------------------------------


3. What is the naming convention for test files in pytest?

a) Files must start with test_
b) Files must end with _test
c) Files must start and end with test_
d) No specific naming is required

ans:A

----------------------------------------

4. How do you mark a test to be skipped in pytest?

a) @pytest.mark.skip(reason="reason_here")
b) @pytest.mark.ignore
c) @pytest.skip
d) @pytest.exclude

ans:A

----------------------------------------

5. What does the assert keyword do in pytest?

a) Stops the test from running
b) Checks if a condition is true
c) Marks a test as skipped
d) Logs the result of a test

ans:B

----------------------------------------

6. How can you run tests in verbose mode using pytest?

a) pytest -d
b) pytest -verbose
c) pytest -v
d) pytest --run

ans:C

----------------------------------------


7. What is the purpose of pytest fixtures?

a) To skip tests
b) To provide reusable setup and teardown code
c) To run tests in parallel
d) To generate test reports

ans:B

----------------------------------------

8. Which pytest marker is used for tests expected to fail?

a) @pytest.mark.skip
b) @pytest.mark.fail
c) @pytest.mark.xfail
d) @pytest.mark.error

ans:C

----------------------------------------

9. How do you dynamically skip a test during execution?

a) pytest_abort()
b) pytest.skip("reason")
c) @pytest.mark.skip
d) pytest.fail()

ans:B

----------------------------------------

10. What is the purpose of pytest.ini or pyproject.toml?

a) To store test results
b) To define configurations for pytest
c) To run pytest from a GUI
d) To install pytest plugins

ans:B

----------------------------------------

11. How do you install pytest in your Python environment?

a) pip install pytest
b) install pytest
c) pytest install
d) python pytest

ans:A

----------------------------------------

12. Which command is used to run a specific test file in pytest?

a) pytest file.py
b) pytest run file.py
c) pytest --file file.py
d) run file.py

ans:A

----------------------------------------

13. What is the use of the -k option in pytest?

a) To mark tests to be skipped
b) To run tests matching a specific substring
c) To disable all tests in a file
d) To sort test results

ans:B

----------------------------------------

14. How do you run tests in parallel using pytest?

a) Use the --parallel flag
b) Use the pytest-parallel plugin
c) Use the pytest-xdist plugin with the -n option
d) pytest doesn’t support parallel execution

ans:C

----------------------------------------



15. What does the -q option do when running pytest?

a) Runs tests in parallel
b) Displays a quiet output with less detail
c) Runs tests with extra logging
d) Skips all tests

ans:B

----------------------------------------
